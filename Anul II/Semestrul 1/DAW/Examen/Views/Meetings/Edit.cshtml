
@model BuhaiDarius34.Models.Meeting
@{
    ViewBag.Title = "Editare Conferinta";
}

<br />
<a class="btn btn-primary pull-left" href="/Meetings/Index"><i class="glyphicon glyphicon-chevron-left"></i> Inapoi la conferinte</a>
<form method="post" action="/Meetings/Delete/@Model.Id">
    @Html.HttpMethodOverride(HttpVerbs.Delete)
    <button type="submit" class="btn btn-danger pull-right"><i class="glyphicon glyphicon-trash"></i> Sterge conferinta</button>
</form>
<br />
<br />
<hr />

<h2>@ViewBag.Title</h2>
@if (ViewBag.Message != null)
{
    <div class="alert alert-danger">
        @ViewBag.Message
    </div>
}

@using (Html.BeginForm(actionName: "Edit", controllerName: "Meetings"))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <br />
    @Html.HiddenFor(m => m.Id)

    @Html.Label("Title", "Titlu Conferinta")
    <br />
    @Html.EditorFor(m => m.TitluMeet, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(m => m.TitluMeet, null, new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("Content", "Continut Conferinta")
    <br />
    @Html.Editor("Content", new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(m => m.Content, null, new { @class = "text-danger" })
    <br />
    @Html.Label("DataMeet", "Data Conferinta")
    <br />
    @Html.EditorFor(m => m.DataMeet, new { htmlAttributes = new { @class = "form-control", type = "text" } })
    @Html.ValidationMessageFor(m => m.DataMeet, null, new { @class = "text-danger" })
    <br />
    <br />
    @Html.HiddenFor(m => m.DataMeet)
    <label>Selectati categoria</label>
    @Html.DropDownListFor(m => m.SubjectId, new SelectList(Model.Subjects, "Value", "Text"), "Selectati subiectul", new { @class = "form-control" })
    <br />
    <button class="btn btn-success" type="submit"><i class="glyphicon glyphicon-floppy-save"></i>&nbsp; Modifica conferinta</button>
}